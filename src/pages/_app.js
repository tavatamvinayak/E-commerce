import Footer from '@/components/Footer'
import Navbar from '@/components/Navbar'
import '@/styles/globals.css'
import Head from 'next/head'
import { useEffect, useState } from 'react'

export default function App({ Component, pageProps }) {

  // useState
  const [Cart, setCart] = useState({});
  const [SubTotal, setSubTotal] = useState(0);

  useEffect(() => {
    console.log("Hey I am a useEffect")
    try {
      if(localStorage.getItem("Cart")){
        setCart(JSON.parse(localStorage.getItem("Cart")))
      }
    } catch (error) {
      console.error(error)
      localStorage.clear()
    }
  }, []);


  // save a localStorage in Carts
  const SaveCart = (myCart)=>{ 
    localStorage.setItem("Cart",myCart);
  
    let subt = 0;
    let keys = Object.keys(myCart)
    for(let i=0; i < keys.length;i++){
      subt += myCart[keys[i]].price * myCart[keys[i]].qty;
    }
    setSubTotal(subt);
  }

  // Adding data for product a details
   const AddToCart =(itemCode,qty,price,name,size,variant)=>{
    let newCart = Cart;
    if(itemCode in Cart){
      newCart[itemCode].qty = Cart[itemCode].qty + qty;
    }
    else{
      newCart[itemCode]= {qty:1 , price,name ,size , variant}
    }
    setCart(newCart)
    SaveCart(newCart) // // localStorage to store a data
   }

   // // 
   const ClearCart=()=>{
    setCart({})
    SaveCart({})
   }


   // // remove form Cart

   const RemoveFromCart=(itemCode,qty,price,name,size,variant)=>{
    let newCart = Cart;
    if(itemCode in Cart){
      newCart[itemCode].qty = Cart[itemCode].qty - qty;
    }
     if(newCart[itemCode].qty <= 0){
      delete newCart[itemCode]
     }
    setCart(newCart)
    SaveCart(newCart) // // localStorage to store a data
   }



















  return (
    <>
      <Head>
        <title>E-commerce</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>


      <Navbar />
      <>
        <Component Cart={Cart} AddToCart={AddToCart} RemoveFromCart={RemoveFromCart} ClearCart={ClearCart} SubTotal={SubTotal} {...pageProps} />
      </>
      <Footer />



    </>
  )
}
